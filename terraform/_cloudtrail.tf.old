# # Cloudtrail default trail
# #tfsec:ignore:aws-cloudwatch-log-group-customer-key tfsec:ignore:aws-cloudtrail-enable-all-regions tfsec:ignore:aws-cloudtrail-enable-at-rest-encryption
# module "cloudtrail" {
#   source                        = "cloudposse/cloudtrail/aws"
#   version                       = "0.21.0"
#   namespace                     = var.client
#   name                          = "default"
#   enable_log_file_validation    = true
#   include_global_service_events = true
#   is_multi_region_trail         = false
#   enable_logging                = true
#   is_organization_trail         = true
#   s3_bucket_name                = aws_s3_bucket.cloudtrail.id
# }

# # Cloudtrail Service Linked Role
# resource "aws_iam_service_linked_role" "cloudtrail" {
#   aws_service_name = "cloudtrail.amazonaws.com"
# }

# # Cloudtrail Log Bucket

# #tfsec:ignore:aws-s3-enable-bucket-logging tfsec:ignore:aws-s3-enable-versioning tfsec:ignore:aws-s3-enable-bucket-encryption tfsec:ignore:aws-s3-encryption-customer-key
# resource "aws_s3_bucket" "cloudtrail" {

#   bucket = "cloudtrail-${data.aws_caller_identity.current.account_id}"

#   tags = {
#     Name = "cloudtrail-${data.aws_caller_identity.current.account_id}"
#   }
# }

# resource "aws_s3_bucket_acl" "cloudtrail" {
#   bucket = aws_s3_bucket.cloudtrail.id
#   acl    = "private"
# }

# #tfsec:ignore:aws-s3-ignore-public-acls
# resource "aws_s3_bucket_public_access_block" "cloudtrail" {
#   bucket = aws_s3_bucket.cloudtrail.id

#   block_public_acls       = true
#   block_public_policy     = true
#   restrict_public_buckets = true
# }

# #tfsec:ignore:aws-s3-encryption-customer-key
# resource "aws_s3_bucket_server_side_encryption_configuration" "cloudtrail" {
#   bucket = aws_s3_bucket.tfm_state.bucket

#   rule {
#     apply_server_side_encryption_by_default {
#       sse_algorithm = "AES256"
#     }
#   }
# }

# data "aws_iam_policy_document" "cloudtrail_bucket_policy" {
#   statement {
#     sid       = "AWSCloudTrailAclCheck"
#     effect    = "Allow"
#     actions   = ["s3:GetBucketAcl"]
#     resources = ["${aws_s3_bucket.cloudtrail.arn}"]
#     principals {
#       type        = "Service"
#       identifiers = ["cloudtrail.amazonaws.com"]
#     }
#   }

#   statement {
#     sid       = "AWSCloudTrailWrite"
#     effect    = "Allow"
#     actions   = ["s3:PutObject"]
#     resources = ["${aws_s3_bucket.cloudtrail.arn}/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*"]
#     principals {
#       type        = "Service"
#       identifiers = ["cloudtrail.amazonaws.com"]
#     }
#     condition {
#       test     = "StringEquals"
#       variable = "s3:x-amz-acl"
#       values   = ["bucket-owner-full-control"]
#     }
#   }


# }

# resource "aws_s3_bucket_policy" "cloudtrail" {
#   bucket = aws_s3_bucket.cloudtrail.id
#   policy = data.aws_iam_policy_document.cloudtrail_bucket_policy.json
# }

